name: Scrape iFood BI Jobs and Email

# Define quando o workflow será acionado
on:
  schedule:
    # Executa o workflow em um cronograma.
    # '0 11 * * *' significa às 11:00 UTC de cada dia (08:00 AM BRT em Salvador).
    - cron: '0 11 * * *' 
  
  # workflow_dispatch permite que você execute o workflow manualmente
  # pela interface do GitHub (na aba "Actions" do seu repositório).
  workflow_dispatch: 

# Define os trabalhos (jobs) a serem executados neste workflow
jobs:
  scrape_and_send:
    # O sistema operacional em que o trabalho será executado
    runs-on: ubuntu-latest

    # As etapas (steps) que o trabalho seguirá
    steps:
    - name: Checkout repository # Etapa para baixar o código do seu repositório
      uses: actions/checkout@v4

    - name: Set up Python # Etapa para configurar o ambiente Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9' # Define a versão do Python a ser usada.

    - name: Install dependencies # Etapa para instalar as bibliotecas Python e o Chrome
      run: |
        python -m pip install --upgrade pip
        # AGORA, ESPECIFIQUE O CAMINHO COMPLETO PARA requirements.txt DENTRO DA SUBPASTA DUPLICADA
        pip install -r carreiras.ifood/requirements.txt 
        
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable fonts-liberation libnspr4 libnss3 lsb-release wget gnupg

    - name: Run scraper and send email # Etapa para executar seu script Python
      env:
        SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
        SENDER_PASSWORD: ${{ secrets.SENDER_PASSWORD }}
        RECEIVER_EMAIL: ${{ secrets.RECEIVER_EMAIL }}
      # DEFINA O DIRETÓRIO DE TRABALHO PARA A SUBPASTA ONDE SEUS ARQUIVOS ESTÃO
      working-directory: carreiras.ifood/ # <--- ADICIONE/AJUSTE ESTA LINHA PARA APONTAR PARA A SUBPASTA
      run: |
        # AGORA, QUE ESTAMOS NA SUBPASTA, PODEMOS REFERENCIAR main.py DIRETAMENTE
        python main.py
